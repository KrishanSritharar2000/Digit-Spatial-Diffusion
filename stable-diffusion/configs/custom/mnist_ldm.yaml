model:
  base_learning_rate: 5.0e-05
  target: ldm.models.diffusion.ddpm.LatentDiffusion
  params:
    linear_start: 0.00085
    linear_end: 0.012
    num_timesteps_cond: 1
    log_every_t: 200
    timesteps: 1000
    first_stage_key: image
    cond_stage_key: caption
    image_size: 16
    channels: 4
    cond_stage_trainable: false
    conditioning_key: crossattn
    monitor: val/loss_simple_ema
    scale_factor: 0.18215
    use_ema: true

    # scheduler_config: # 10000 warmup steps
    #   target: ldm.lr_scheduler.LambdaLinearScheduler
    #   params:
    #     warm_up_steps: [ 10000 ]
    #     cycle_lengths: [ 10000000000000 ] # incredibly large number to prevent corner cases
    #     f_start: [ 1.e-6 ]
    #     f_max: [ 1. ]
    #     f_min: [ 1. ]

    unet_config:
      target: ldm.modules.diffusionmodules.openaimodel.UNetModel
      params:
        image_size: 16
        in_channels: 4
        out_channels: 4
        model_channels: 256
        attention_resolutions: [4, 2, 1]
        num_res_blocks: 2
        channel_mult: [1, 2, 4, 4]
        num_heads: 8
        use_spatial_transformer: true
        transformer_depth: 1
        context_dim: 768 #1280
        use_checkpoint: true
        legacy: False

    first_stage_config:
      target: ldm.models.autoencoder.AutoencoderKL
      params:
        monitor: val/rec_loss
        ckpt_path: trained_models/autoenocder_model_16-05.ckpt
        embed_dim: 4
        lossconfig:
          target: ldm.modules.losses.LPIPSWithDiscriminator
          params:
            disc_start: 10001
            kl_weight: 0.1
            disc_weight: 0.5
            disc_in_channels: 1
        ddconfig:
          double_z: true
          z_channels: 4
          resolution: 128
          in_channels: 1
          out_ch: 1
          ch: 32
          ch_mult:
          - 1
          - 2
          - 4
          - 4
          num_res_blocks: 2
          attn_resolutions: []
          dropout: 0.1
          tanh_out: true

    cond_stage_config:
      target: ldm.modules.encoders.modules.FrozenCLIPEmbedder
    # cond_stage_config:
    #   target: ldm.modules.encoders.modules.BERTEmbedder
    #   params:
    #     n_embed: 1280
    #     n_layer: 32

data:
    target: main.DataModuleFromConfig
    params:
        batch_size: 1
        wrap: True
        train:
            target: custom.data.mnist_dataset.MNISTTrain
            params:
                size: 128
        validation:
            target: custom.data.mnist_dataset.MNISTValidation
            params:
                size: 128

lightning:
  callbacks:
    image_logger:
      target: main.ImageLogger
      params:
        batch_frequency: 1000
        max_images: 8
        increase_log_steps: False

  trainer:
    benchmark: True
